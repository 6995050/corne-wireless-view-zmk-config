/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        slash {
            bindings = <&kp SLASH>;
            key-positions = <34 33>;
        };

        question {
            bindings = <&kp QUESTION>;
            key-positions = <33 32>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <6 7>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <7 8>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <18 19>;
        };

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <19 20>;
        };
    };

    behaviors {
        pmsv_hold: pmsv_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "PMSV_HOLD";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&mt>, <&kp>;
        };

        balance: balance_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "BALANCE LAYER";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Excuse";
            bindings = <
&none  &kp Q  &kp W  &kp E  &kp R                  &kp T                             &kp Y                   &kp U                   &kp I  &kp O      &kp P       &none
&none  &kp A  &kp S  &kp D  &balance layer 1 F     &kp G                             &kp H                   &balance layer 1 J      &kp K  &kp L      &kp SEMI    &none
&none  &kp Z  &kp X  &kp C  &kp V                  &kp BACKSPACE                     &kp B                   &kp N                   &kp M  &kp COMMA  &kp PERIOD  &none
                     &none  &pmsv_hold LSHIFT TAB  &pmsv_hold LEFT_COMMAND ESCAPE    &balance layer 2 SPACE  &balance layer 3 ENTER  &none
            >;
        };

        layer_1 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Sym";
            bindings = <
&none  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT     &kp CARET             &kp AMPERSAND          &kp ASTERISK      &kp UNDERSCORE     &kp MINUS      &none
&none  &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH  &none
&none  &trans           &trans        &trans        &trans        &trans          &trans                &trans                 &trans            &trans             &trans         &none
                                      &none         &trans        &trans          &trans                &trans                 &none
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp ASTERISK  &kp N7        &kp N8        &kp N9        &kp MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &to 0         &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp EQUAL     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH  &trans
                        &trans  &trans  &trans    &trans        &kp N0        &kp PERIOD
            >;

            label = "Num";
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans              &kp HOME                &kp UP_ARROW  &kp END            &kp LC(UP_ARROW)   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LC(LEFT_ARROW)  &kp LEFT_ARROW          &kp DOWN      &kp RIGHT          &kp LG(LA(LEFT))   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LC(RIGHT)       &kp LC(LA(LEFT_ARROW))  &trans        &kp LC(LA(RIGHT))  &kp LA(LG(RIGHT))  &trans
                        &trans  &trans  &trans    &trans              &trans                  &trans
            >;

            label = "Nav";
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "BLE";
        };

        extra_1 { status = "reserved"; };

        extra_2 { status = "reserved"; };

        extra_3 { status = "reserved"; };
    };
};
